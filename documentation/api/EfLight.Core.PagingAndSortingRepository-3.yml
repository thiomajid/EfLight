### YamlMime:ManagedReference
items:
- uid: EfLight.Core.PagingAndSortingRepository`3
  commentId: T:EfLight.Core.PagingAndSortingRepository`3
  id: PagingAndSortingRepository`3
  parent: EfLight.Core
  children:
  - EfLight.Core.PagingAndSortingRepository`3.#ctor(`0)
  - EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  - EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  - EfLight.Core.PagingAndSortingRepository`3.FindAll(System.Boolean)
  - EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  - EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  - EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  - EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  - EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  - EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  - EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  langs:
  - csharp
  - vb
  name: PagingAndSortingRepository<TContext, TEntity, TKey>
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>
  type: Class
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: PagingAndSortingRepository
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 7
  assemblies:
  - EfLight
  namespace: EfLight.Core
  syntax:
    content: 'public abstract class PagingAndSortingRepository<TContext, TEntity, TKey> : CrudRepository<TContext, TEntity, TKey>, IPagingAndSortingRepository<TEntity, TKey>, ICrudRepository<TEntity, TKey>, ILightRepository where TContext : DbContext where TEntity : class'
    typeParameters:
    - id: TContext
    - id: TEntity
    - id: TKey
    content.vb: Public MustInherit Class PagingAndSortingRepository(Of TContext As DbContext, TEntity As Class, TKey) Inherits CrudRepository(Of TContext, TEntity, TKey) Implements IPagingAndSortingRepository(Of TEntity, TKey), ICrudRepository(Of TEntity, TKey), ILightRepository
  inheritance:
  - System.Object
  - EfLight.Core.LightRepository{{TContext}}
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  - EfLight.Abstractions.ICrudRepository{{TEntity},{TKey}}
  - EfLight.Abstractions.ILightRepository
  inheritedMembers:
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.SaveChanges
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.SaveChangesAsync
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Count
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountAsync(System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteById({TKey})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteByIdAsync({TKey},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.ExistsWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AllAre(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AllAreAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindById({TKey})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindByIdAsync({TKey},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Add({TEntity})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddAsync({TEntity},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddMany(System.Collections.Generic.IEnumerable{{TEntity}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddManyAsync(System.Collections.Generic.IEnumerable{{TEntity}},System.Threading.CancellationToken)
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Update({TEntity})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateMany(System.Collections.Generic.IEnumerable{{TEntity}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}}}})
  - EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}}}},System.Threading.CancellationToken)
  - EfLight.Core.LightRepository{{TContext}}._context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - EfLight.Core.PagingAndSortingRepository`3.EfLight.Extensions.Object.ToOption``1
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey)
  name.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey)
- uid: EfLight.Core.PagingAndSortingRepository`3.#ctor(`0)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.#ctor(`0)
  id: '#ctor(`0)'
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: PagingAndSortingRepository(TContext)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.PagingAndSortingRepository(TContext)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.PagingAndSortingRepository(TContext)
  type: Constructor
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: .ctor
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 7
  assemblies:
  - EfLight
  namespace: EfLight.Core
  syntax:
    content: protected PagingAndSortingRepository(TContext context)
    parameters:
    - id: context
      type: '{TContext}'
    content.vb: Protected Sub New(context As TContext)
  overload: EfLight.Core.PagingAndSortingRepository`3.#ctor*
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).New(TContext)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).New(TContext)
  name.vb: New(TContext)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll(System.Boolean)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAll(System.Boolean)
  id: FindAll(System.Boolean)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAll(bool)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(bool)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(bool)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAll
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 16
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: Retrives all records held in <code class="typeparamref">TEntity</code> entity's table.
  example: []
  syntax:
    content: public IEnumerable<TEntity> FindAll(bool track = false)
    parameters:
    - id: track
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public Function FindAll(track As Boolean = False) As IEnumerable(Of TEntity)
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(System.Boolean)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Boolean)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Boolean)
  name.vb: FindAll(Boolean)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  id: FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAll(PaginationRequest, bool)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(PaginationRequest, bool)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, bool)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAll
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 29
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>
  example: []
  syntax:
    content: public IEnumerable<TEntity> FindAll(PaginationRequest page, bool track = false)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: track
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public Function FindAll(page As PaginationRequest, track As Boolean = False) As IEnumerable(Of TEntity)
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(PaginationRequest, Boolean)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, Boolean)
  name.vb: FindAll(PaginationRequest, Boolean)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  id: FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAll
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 41
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>

    that matches the provided <code class="paramref">predicate</code>.
  example: []
  syntax:
    content: public IEnumerable<TEntity> FindAll(PaginationRequest page, Expression<Func<TEntity, bool>> predicate, bool track = false)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    - id: track
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public Function FindAll(page As PaginationRequest, predicate As Expression(Of Func(Of TEntity, Boolean)), track As Boolean = False) As IEnumerable(Of TEntity)
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  id: FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAll
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 57
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>

    ordered by <code class="typeparamref">TOrderKey</code>.
  example: []
  syntax:
    content: public IEnumerable<TEntity> FindAll<TOrderKey>(PaginationRequest page, Expression<Func<TEntity, TOrderKey>> orderKey, SortDirection sort = SortDirection.Ascending, bool track = false)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: orderKey
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}}
    - id: sort
      type: EfLight.Common.SortDirection
    - id: track
      type: System.Boolean
    typeParameters:
    - id: TOrderKey
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public Function FindAll(Of TOrderKey)(page As PaginationRequest, orderKey As Expression(Of Func(Of TEntity, TOrderKey)), sort As SortDirection = SortDirection.Ascending, track As Boolean = False) As IEnumerable(Of TEntity)
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  id: FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAll
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 74
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>

    that matches the provided <code class="paramref">predicate</code> and ordered by <code class="typeparamref">TOrderKey</code>
  example: []
  syntax:
    content: public IEnumerable<TEntity> FindAll<TOrderKey>(PaginationRequest page, Expression<Func<TEntity, bool>> predicate, Expression<Func<TEntity, TOrderKey>> orderKey, SortDirection sort = SortDirection.Ascending, bool track = false)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    - id: orderKey
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}}
    - id: sort
      type: EfLight.Common.SortDirection
    - id: track
      type: System.Boolean
    typeParameters:
    - id: TOrderKey
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public Function FindAll(Of TOrderKey)(page As PaginationRequest, predicate As Expression(Of Func(Of TEntity, Boolean)), orderKey As Expression(Of Func(Of TEntity, TOrderKey)), sort As SortDirection = SortDirection.Ascending, track As Boolean = False) As IEnumerable(Of TEntity)
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  id: FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAllAsync(bool, CancellationToken)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(bool, CancellationToken)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAllAsync
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 89
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: Retrives all records held in <code class="typeparamref">TEntity</code> entity's table.
  example: []
  syntax:
    content: public Task<IEnumerable<TEntity>> FindAllAsync(bool track = false, CancellationToken cancellationToken = default)
    parameters:
    - id: track
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function FindAllAsync(track As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Boolean, CancellationToken)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Boolean, CancellationToken)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  id: FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAllAsync(PaginationRequest, bool, CancellationToken)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(PaginationRequest, bool, CancellationToken)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAllAsync
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 105
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>.
  example: []
  syntax:
    content: public Task<IEnumerable<TEntity>> FindAllAsync(PaginationRequest page, bool track = false, CancellationToken cancellationToken = default)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: track
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function FindAllAsync(page As PaginationRequest, track As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(PaginationRequest, Boolean, CancellationToken)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Boolean, CancellationToken)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  id: FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAllAsync
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 120
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code> fullfilling

    the given <code class="paramref">predicate</code> condition.
  example: []
  syntax:
    content: public Task<IEnumerable<TEntity>> FindAllAsync(PaginationRequest page, Expression<Func<TEntity, bool>> predicate, bool track = false, CancellationToken cancellationToken = default)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    - id: track
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function FindAllAsync(page As PaginationRequest, predicate As Expression(Of Func(Of TEntity, Boolean)), track As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  id: FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAllAsync
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 140
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">page.PageSize.PageSize</code> of <code class="typeparamref">TEntity</code>

    ordered by <code class="typeparamref">TOrderKey</code>.
  example: []
  syntax:
    content: public Task<IEnumerable<TEntity>> FindAllAsync<TOrderKey>(PaginationRequest page, Expression<Func<TEntity, TOrderKey>> orderKey, SortDirection sort = SortDirection.Ascending, bool track = false, CancellationToken cancellationToken = default)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
      description: ''
    - id: orderKey
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}}
    - id: sort
      type: EfLight.Common.SortDirection
    - id: track
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TOrderKey
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function FindAllAsync(Of TOrderKey)(page As PaginationRequest, orderKey As Expression(Of Func(Of TEntity, TOrderKey)), sort As SortDirection = SortDirection.Ascending, track As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  id: FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Core.PagingAndSortingRepository`3
  langs:
  - csharp
  - vb
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: EfLight/Core/PagingAndSortingRepository.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: FindAllAsync
    path: EfLight/Core/PagingAndSortingRepository.cs
    startLine: 163
  assemblies:
  - EfLight
  namespace: EfLight.Core
  summary: >-
    Returns a given set of at most <code class="paramref">PageSize</code> of <code class="typeparamref">TEntity</code>

    that matches the provided <code class="paramref">predicate</code> and ordered by <code class="typeparamref">TOrderKey</code>
  example: []
  syntax:
    content: public Task<IEnumerable<TEntity>> FindAllAsync<TOrderKey>(PaginationRequest page, Expression<Func<TEntity, bool>> predicate, Expression<Func<TEntity, TOrderKey>> orderKey, SortDirection sort = SortDirection.Ascending, bool track = false, CancellationToken cancellationToken = default)
    parameters:
    - id: page
      type: EfLight.Common.PaginationRequest
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    - id: orderKey
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}}
    - id: sort
      type: EfLight.Common.SortDirection
    - id: track
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TOrderKey
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function FindAllAsync(Of TOrderKey)(page As PaginationRequest, predicate As Expression(Of Func(Of TEntity, Boolean)), orderKey As Expression(Of Func(Of TEntity, TOrderKey)), sort As SortDirection = SortDirection.Ascending, track As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  implements:
  - EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
references:
- uid: EfLight.Core
  commentId: N:EfLight.Core
  href: EfLight.html
  name: EfLight.Core
  nameWithType: EfLight.Core
  fullName: EfLight.Core
  spec.csharp:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Core
    name: Core
    href: EfLight.Core.html
  spec.vb:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Core
    name: Core
    href: EfLight.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: EfLight.Core.LightRepository{{TContext}}
  commentId: T:EfLight.Core.LightRepository{`0}
  parent: EfLight.Core
  definition: EfLight.Core.LightRepository`1
  href: EfLight.Core.LightRepository-1.html
  name: LightRepository<TContext>
  nameWithType: LightRepository<TContext>
  fullName: EfLight.Core.LightRepository<TContext>
  nameWithType.vb: LightRepository(Of TContext)
  fullName.vb: EfLight.Core.LightRepository(Of TContext)
  name.vb: LightRepository(Of TContext)
  spec.csharp:
  - uid: EfLight.Core.LightRepository`1
    name: LightRepository
    href: EfLight.Core.LightRepository-1.html
  - name: <
  - name: TContext
  - name: '>'
  spec.vb:
  - uid: EfLight.Core.LightRepository`1
    name: LightRepository
    href: EfLight.Core.LightRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  commentId: T:EfLight.Core.CrudRepository{`0,`1,`2}
  parent: EfLight.Core
  definition: EfLight.Core.CrudRepository`3
  href: EfLight.Core.CrudRepository-3.html
  name: CrudRepository<TContext, TEntity, TKey>
  nameWithType: CrudRepository<TContext, TEntity, TKey>
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey)
  name.vb: CrudRepository(Of TContext, TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3
    name: CrudRepository
    href: EfLight.Core.CrudRepository-3.html
  - name: <
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3
    name: CrudRepository
    href: EfLight.Core.CrudRepository-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  commentId: T:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}
  parent: EfLight.Abstractions
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  name: IPagingAndSortingRepository<TEntity, TKey>
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey)
  name.vb: IPagingAndSortingRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2
    name: IPagingAndSortingRepository
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2
    name: IPagingAndSortingRepository
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Abstractions.ICrudRepository{{TEntity},{TKey}}
  commentId: T:EfLight.Abstractions.ICrudRepository{`0,`1}
  parent: EfLight.Abstractions
  definition: EfLight.Abstractions.ICrudRepository`2
  href: EfLight.Abstractions.ICrudRepository-2.html
  name: ICrudRepository<TEntity, TKey>
  nameWithType: ICrudRepository<TEntity, TKey>
  fullName: EfLight.Abstractions.ICrudRepository<TEntity, TKey>
  nameWithType.vb: ICrudRepository(Of TEntity, TKey)
  fullName.vb: EfLight.Abstractions.ICrudRepository(Of TEntity, TKey)
  name.vb: ICrudRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Abstractions.ICrudRepository`2
    name: ICrudRepository
    href: EfLight.Abstractions.ICrudRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Abstractions.ICrudRepository`2
    name: ICrudRepository
    href: EfLight.Abstractions.ICrudRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Abstractions.ILightRepository
  commentId: T:EfLight.Abstractions.ILightRepository
  parent: EfLight.Abstractions
  href: EfLight.Abstractions.ILightRepository.html
  name: ILightRepository
  nameWithType: ILightRepository
  fullName: EfLight.Abstractions.ILightRepository
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.SaveChanges
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.SaveChanges
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.SaveChanges
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  name: SaveChanges()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.SaveChanges()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.SaveChanges()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).SaveChanges()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).SaveChanges()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.SaveChanges
    name: SaveChanges
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.SaveChanges
    name: SaveChanges
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.SaveChangesAsync
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.SaveChangesAsync
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.SaveChangesAsync
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.SaveChangesAsync()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.SaveChangesAsync()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).SaveChangesAsync()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).SaveChangesAsync()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.SaveChangesAsync
    name: SaveChangesAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.SaveChangesAsync
    name: SaveChangesAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Count
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.Count
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.Count
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  name: Count()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Count()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Count()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Count()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Count()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Count
    name: Count
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Count
    name: Count
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountAsync(System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.CountAsync(System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.CountAsync(System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  name: CountAsync(CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountAsync(CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountAsync(System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountAsync(CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountAsync(System.Threading.CancellationToken)
    name: CountAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountAsync(System.Threading.CancellationToken)
    name: CountAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: CountWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: CountWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: CountWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: CountWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: CountWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: CountWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: CountWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: CountWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteById({TKey})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.DeleteById(`2)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.DeleteById(`2)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  name: DeleteById(TKey)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteById(TKey)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteById(TKey)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteById(TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteById(TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteById(`2)
    name: DeleteById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteById(`2)
    name: DeleteById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  - name: (
  - name: TKey
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteByIdAsync({TKey},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.DeleteByIdAsync(`2,System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.DeleteByIdAsync(`2,System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  name: DeleteByIdAsync(TKey, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteByIdAsync(TKey, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteByIdAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteByIdAsync(TKey, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteByIdAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteByIdAsync(`2,System.Threading.CancellationToken)
    name: DeleteByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteByIdAsync(`2,System.Threading.CancellationToken)
    name: DeleteByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: DeleteWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: DeleteWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: DeleteWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: DeleteWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: DeleteWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: DeleteWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: DeleteWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: DeleteWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.ExistsWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: ExistsWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.ExistsWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.ExistsWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).ExistsWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).ExistsWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: ExistsWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: ExistsWhereAsync(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.ExistsWhereAsync(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.ExistsWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).ExistsWhereAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).ExistsWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: ExistsWhereAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AllAre(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: AllAre(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AllAre(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AllAre(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AllAre(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AllAre(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AllAre(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAre
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAre
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AllAreAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: AllAreAsync(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AllAreAsync(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AllAreAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AllAreAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AllAreAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AllAreAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAreAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAreAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindById({TKey})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.FindById(`2)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.FindById(`2)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  name: FindById(TKey)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindById(TKey)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindById(TKey)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindById(TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindById(TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindById(`2)
    name: FindById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindById(`2)
    name: FindById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  - name: (
  - name: TKey
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindByIdAsync({TKey},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.FindByIdAsync(`2,System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.FindByIdAsync(`2,System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  name: FindByIdAsync(TKey, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindByIdAsync(TKey, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindByIdAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindByIdAsync(TKey, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindByIdAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindByIdAsync(`2,System.Threading.CancellationToken)
    name: FindByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindByIdAsync(`2,System.Threading.CancellationToken)
    name: FindByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: FindWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: FindWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FindWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FindWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: FindWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: FindWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: FindWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: FindWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Add({TEntity})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.Add(`1)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.Add(`1)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  name: Add(TEntity)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Add(TEntity)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Add(TEntity)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Add(TEntity)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Add(TEntity)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Add(`1)
    name: Add
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Add(`1)
    name: Add
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  - name: (
  - name: TEntity
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddAsync({TEntity},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.AddAsync(`1,System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  name: AddAsync(TEntity, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddAsync(TEntity, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddAsync(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddAsync(TEntity, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddAsync(TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddAsync(`1,System.Threading.CancellationToken)
    name: AddAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddAsync(`1,System.Threading.CancellationToken)
    name: AddAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddMany(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.AddMany(System.Collections.Generic.IEnumerable{`1})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  name: AddMany(IEnumerable<TEntity>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddMany(IEnumerable<TEntity>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddMany(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddMany(IEnumerable(Of TEntity))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddMany(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddMany(System.Collections.Generic.IEnumerable{`1})
    name: AddMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddMany(System.Collections.Generic.IEnumerable{`1})
    name: AddMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.AddManyAsync(System.Collections.Generic.IEnumerable{{TEntity}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  name: AddManyAsync(IEnumerable<TEntity>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddManyAsync(IEnumerable<TEntity>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddManyAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddManyAsync(IEnumerable(Of TEntity), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddManyAsync(System.Collections.Generic.IEnumerable(Of TEntity), System.Threading.CancellationToken)
  name.vb: AddManyAsync(IEnumerable(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
    name: AddManyAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
    name: AddManyAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.Update({TEntity})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.Update(`1)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.Update(`1)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  name: Update(TEntity)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Update(TEntity)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Update(TEntity)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Update(TEntity)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Update(TEntity)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Update(`1)
    name: Update
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.Update(`1)
    name: Update
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  - name: (
  - name: TEntity
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateMany(System.Collections.Generic.IEnumerable{{TEntity}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.UpdateMany(System.Collections.Generic.IEnumerable{`1})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.UpdateMany(System.Collections.Generic.IEnumerable{`1})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  name: UpdateMany(IEnumerable<TEntity>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateMany(IEnumerable<TEntity>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateMany(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateMany(IEnumerable(Of TEntity))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpdateMany(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateMany(System.Collections.Generic.IEnumerable{`1})
    name: UpdateMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateMany(System.Collections.Generic.IEnumerable{`1})
    name: UpdateMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateWhere(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}}}})
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  name: UpdateWhere(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateWhere(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>, Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateWhere(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity), Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity))))
  name.vb: UpdateWhere(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
    name: UpdateWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
    name: UpdateWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{{TEntity}}}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
  parent: EfLight.Core.CrudRepository{{TContext},{TEntity},{TKey}}
  definition: EfLight.Core.CrudRepository`3.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  name: UpdateWhereAsync(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateWhereAsync(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>, Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateWhereAsync(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity), Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity))), System.Threading.CancellationToken)
  name.vb: UpdateWhereAsync(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
    name: UpdateWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository{`0,`1,`2}.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
    name: UpdateWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.LightRepository{{TContext}}._context
  commentId: F:EfLight.Core.LightRepository{`0}._context
  parent: EfLight.Core.LightRepository{{TContext}}
  definition: EfLight.Core.LightRepository`1._context
  href: EfLight.Core.LightRepository-1.html#EfLight_Core_LightRepository_1__context
  name: _context
  nameWithType: LightRepository<TContext>._context
  fullName: EfLight.Core.LightRepository<TContext>._context
  nameWithType.vb: LightRepository(Of TContext)._context
  fullName.vb: EfLight.Core.LightRepository(Of TContext)._context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: EfLight.Core.PagingAndSortingRepository`3.EfLight.Extensions.Object.ToOption``1
  commentId: M:EfLight.Extensions.Object.ToOption``1(``0)
  parent: EfLight.Extensions.Object
  definition: EfLight.Extensions.Object.ToOption``1(``0)
  href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  name: ToOption<PagingAndSortingRepository<TContext, TEntity, TKey>>(PagingAndSortingRepository<TContext, TEntity, TKey>)
  nameWithType: Object.ToOption<PagingAndSortingRepository<TContext, TEntity, TKey>>(PagingAndSortingRepository<TContext, TEntity, TKey>)
  fullName: EfLight.Extensions.Object.ToOption<EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>>(EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>)
  nameWithType.vb: Object.ToOption(Of PagingAndSortingRepository(Of TContext, TEntity, TKey))(PagingAndSortingRepository(Of TContext, TEntity, TKey))
  fullName.vb: EfLight.Extensions.Object.ToOption(Of EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey))(EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey))
  name.vb: ToOption(Of PagingAndSortingRepository(Of TContext, TEntity, TKey))(PagingAndSortingRepository(Of TContext, TEntity, TKey))
  spec.csharp:
  - uid: EfLight.Extensions.Object.ToOption``1(EfLight.Core.PagingAndSortingRepository{`0,`1,`2})
    name: ToOption
    href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  - name: <
  - uid: EfLight.Core.PagingAndSortingRepository`3
    name: PagingAndSortingRepository
    href: EfLight.Core.PagingAndSortingRepository-3.html
  - name: <
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: '>'
  - name: (
  - uid: EfLight.Core.PagingAndSortingRepository`3
    name: PagingAndSortingRepository
    href: EfLight.Core.PagingAndSortingRepository-3.html
  - name: <
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Extensions.Object.ToOption``1(EfLight.Core.PagingAndSortingRepository{`0,`1,`2})
    name: ToOption
    href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: EfLight.Core.PagingAndSortingRepository`3
    name: PagingAndSortingRepository
    href: EfLight.Core.PagingAndSortingRepository-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
  - name: (
  - uid: EfLight.Core.PagingAndSortingRepository`3
    name: PagingAndSortingRepository
    href: EfLight.Core.PagingAndSortingRepository-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EfLight.Core.LightRepository`1
  commentId: T:EfLight.Core.LightRepository`1
  href: EfLight.Core.LightRepository-1.html
  name: LightRepository<TContext>
  nameWithType: LightRepository<TContext>
  fullName: EfLight.Core.LightRepository<TContext>
  nameWithType.vb: LightRepository(Of TContext)
  fullName.vb: EfLight.Core.LightRepository(Of TContext)
  name.vb: LightRepository(Of TContext)
  spec.csharp:
  - uid: EfLight.Core.LightRepository`1
    name: LightRepository
    href: EfLight.Core.LightRepository-1.html
  - name: <
  - name: TContext
  - name: '>'
  spec.vb:
  - uid: EfLight.Core.LightRepository`1
    name: LightRepository
    href: EfLight.Core.LightRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: )
- uid: EfLight.Core.CrudRepository`3
  commentId: T:EfLight.Core.CrudRepository`3
  href: EfLight.Core.CrudRepository-3.html
  name: CrudRepository<TContext, TEntity, TKey>
  nameWithType: CrudRepository<TContext, TEntity, TKey>
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey)
  name.vb: CrudRepository(Of TContext, TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3
    name: CrudRepository
    href: EfLight.Core.CrudRepository-3.html
  - name: <
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3
    name: CrudRepository
    href: EfLight.Core.CrudRepository-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2
  commentId: T:EfLight.Abstractions.IPagingAndSortingRepository`2
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  name: IPagingAndSortingRepository<TEntity, TKey>
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey)
  name.vb: IPagingAndSortingRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2
    name: IPagingAndSortingRepository
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2
    name: IPagingAndSortingRepository
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Abstractions
  commentId: N:EfLight.Abstractions
  href: EfLight.html
  name: EfLight.Abstractions
  nameWithType: EfLight.Abstractions
  fullName: EfLight.Abstractions
  spec.csharp:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Abstractions
    name: Abstractions
    href: EfLight.Abstractions.html
  spec.vb:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Abstractions
    name: Abstractions
    href: EfLight.Abstractions.html
- uid: EfLight.Abstractions.ICrudRepository`2
  commentId: T:EfLight.Abstractions.ICrudRepository`2
  href: EfLight.Abstractions.ICrudRepository-2.html
  name: ICrudRepository<TEntity, TKey>
  nameWithType: ICrudRepository<TEntity, TKey>
  fullName: EfLight.Abstractions.ICrudRepository<TEntity, TKey>
  nameWithType.vb: ICrudRepository(Of TEntity, TKey)
  fullName.vb: EfLight.Abstractions.ICrudRepository(Of TEntity, TKey)
  name.vb: ICrudRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: EfLight.Abstractions.ICrudRepository`2
    name: ICrudRepository
    href: EfLight.Abstractions.ICrudRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: EfLight.Abstractions.ICrudRepository`2
    name: ICrudRepository
    href: EfLight.Abstractions.ICrudRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: EfLight.Core.CrudRepository`3.SaveChanges
  commentId: M:EfLight.Core.CrudRepository`3.SaveChanges
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  name: SaveChanges()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.SaveChanges()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.SaveChanges()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).SaveChanges()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).SaveChanges()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.SaveChanges
    name: SaveChanges
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.SaveChanges
    name: SaveChanges
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChanges
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository`3.SaveChangesAsync
  commentId: M:EfLight.Core.CrudRepository`3.SaveChangesAsync
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  name: SaveChangesAsync()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.SaveChangesAsync()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.SaveChangesAsync()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).SaveChangesAsync()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).SaveChangesAsync()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.SaveChangesAsync
    name: SaveChangesAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.SaveChangesAsync
    name: SaveChangesAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_SaveChangesAsync
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository`3.Count
  commentId: M:EfLight.Core.CrudRepository`3.Count
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  name: Count()
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Count()
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Count()
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Count()
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Count()
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.Count
    name: Count
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  - name: (
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.Count
    name: Count
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Count
  - name: (
  - name: )
- uid: EfLight.Core.CrudRepository`3.CountAsync(System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.CountAsync(System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  name: CountAsync(CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountAsync(CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountAsync(System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountAsync(CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.CountAsync(System.Threading.CancellationToken)
    name: CountAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.CountAsync(System.Threading.CancellationToken)
    name: CountAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: CountWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: CountWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: CountWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.CountWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: CountWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: CountWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.CountWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.CountWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).CountWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).CountWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: CountWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: CountWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.CountWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: CountWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_CountWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.DeleteById(`2)
  commentId: M:EfLight.Core.CrudRepository`3.DeleteById(`2)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  name: DeleteById(TKey)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteById(TKey)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteById(TKey)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteById(TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteById(TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.DeleteById(`2)
    name: DeleteById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.DeleteById(`2)
    name: DeleteById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteById__2_
  - name: (
  - name: TKey
  - name: )
- uid: EfLight.Core.CrudRepository`3.DeleteByIdAsync(`2,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.DeleteByIdAsync(`2,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  name: DeleteByIdAsync(TKey, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteByIdAsync(TKey, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteByIdAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteByIdAsync(TKey, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteByIdAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.DeleteByIdAsync(`2,System.Threading.CancellationToken)
    name: DeleteByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.DeleteByIdAsync(`2,System.Threading.CancellationToken)
    name: DeleteByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: DeleteWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: DeleteWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: DeleteWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.DeleteWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: DeleteWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: DeleteWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.DeleteWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.DeleteWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).DeleteWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).DeleteWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: DeleteWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: DeleteWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.DeleteWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: DeleteWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_DeleteWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: ExistsWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.ExistsWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.ExistsWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).ExistsWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).ExistsWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: ExistsWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.ExistsWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: ExistsWhereAsync(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.ExistsWhereAsync(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.ExistsWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).ExistsWhereAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).ExistsWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: ExistsWhereAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.ExistsWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: ExistsWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_ExistsWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: AllAre(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AllAre(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AllAre(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AllAre(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AllAre(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AllAre(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAre
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.AllAre(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAre
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAre_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: AllAreAsync(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AllAreAsync(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AllAreAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AllAreAsync(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AllAreAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AllAreAsync(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAreAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.AllAreAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: AllAreAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AllAreAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.FindById(`2)
  commentId: M:EfLight.Core.CrudRepository`3.FindById(`2)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  name: FindById(TKey)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindById(TKey)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindById(TKey)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindById(TKey)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindById(TKey)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.FindById(`2)
    name: FindById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.FindById(`2)
    name: FindById
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindById__2_
  - name: (
  - name: TKey
  - name: )
- uid: EfLight.Core.CrudRepository`3.FindByIdAsync(`2,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.FindByIdAsync(`2,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  name: FindByIdAsync(TKey, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindByIdAsync(TKey, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindByIdAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindByIdAsync(TKey, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindByIdAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.FindByIdAsync(`2,System.Threading.CancellationToken)
    name: FindByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.FindByIdAsync(`2,System.Threading.CancellationToken)
    name: FindByIdAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindByIdAsync__2_System_Threading_CancellationToken_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:EfLight.Core.CrudRepository`3.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  name: FindWhere(Expression<Func<TEntity, bool>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindWhere(Expression<Func<TEntity, bool>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindWhere(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: FindWhere(Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FindWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.FindWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: FindWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  name: FindWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.FindWhereAsync(Expression<Func<TEntity, bool>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.FindWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).FindWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).FindWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Threading.CancellationToken)
  name.vb: FindWhereAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: FindWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.FindWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)
    name: FindWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_FindWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.Add(`1)
  commentId: M:EfLight.Core.CrudRepository`3.Add(`1)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  name: Add(TEntity)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Add(TEntity)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Add(TEntity)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Add(TEntity)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Add(TEntity)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.Add(`1)
    name: Add
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.Add(`1)
    name: Add
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Add__1_
  - name: (
  - name: TEntity
  - name: )
- uid: EfLight.Core.CrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  name: AddAsync(TEntity, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddAsync(TEntity, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddAsync(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddAsync(TEntity, CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddAsync(TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
    name: AddAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
    name: AddAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  commentId: M:EfLight.Core.CrudRepository`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  name: AddMany(IEnumerable<TEntity>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddMany(IEnumerable<TEntity>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddMany(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddMany(IEnumerable(Of TEntity))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddMany(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.AddMany(System.Collections.Generic.IEnumerable{`1})
    name: AddMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.AddMany(System.Collections.Generic.IEnumerable{`1})
    name: AddMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  name: AddManyAsync(IEnumerable<TEntity>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.AddManyAsync(IEnumerable<TEntity>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.AddManyAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).AddManyAsync(IEnumerable(Of TEntity), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).AddManyAsync(System.Collections.Generic.IEnumerable(Of TEntity), System.Threading.CancellationToken)
  name.vb: AddManyAsync(IEnumerable(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
    name: AddManyAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.AddManyAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)
    name: AddManyAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_AddManyAsync_System_Collections_Generic_IEnumerable__1__System_Threading_CancellationToken_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.CrudRepository`3.Update(`1)
  commentId: M:EfLight.Core.CrudRepository`3.Update(`1)
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  name: Update(TEntity)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.Update(TEntity)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.Update(TEntity)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).Update(TEntity)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).Update(TEntity)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.Update(`1)
    name: Update
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.Update(`1)
    name: Update
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_Update__1_
  - name: (
  - name: TEntity
  - name: )
- uid: EfLight.Core.CrudRepository`3.UpdateMany(System.Collections.Generic.IEnumerable{`1})
  commentId: M:EfLight.Core.CrudRepository`3.UpdateMany(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  name: UpdateMany(IEnumerable<TEntity>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateMany(IEnumerable<TEntity>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateMany(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateMany(IEnumerable(Of TEntity))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpdateMany(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.UpdateMany(System.Collections.Generic.IEnumerable{`1})
    name: UpdateMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.UpdateMany(System.Collections.Generic.IEnumerable{`1})
    name: UpdateMany
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateMany_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
  commentId: M:EfLight.Core.CrudRepository`3.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  name: UpdateWhere(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateWhere(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateWhere(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>, Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>>>)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateWhere(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))))
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateWhere(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity), Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity))))
  name.vb: UpdateWhere(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))))
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
    name: UpdateWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.UpdateWhere(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}})
    name: UpdateWhere
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhere_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
  - name: )
- uid: EfLight.Core.CrudRepository`3.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
  commentId: M:EfLight.Core.CrudRepository`3.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  name: UpdateWhereAsync(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>, CancellationToken)
  nameWithType: CrudRepository<TContext, TEntity, TKey>.UpdateWhereAsync(Expression<Func<TEntity, bool>>, Expression<Func<SetPropertyCalls<TEntity>, SetPropertyCalls<TEntity>>>, CancellationToken)
  fullName: EfLight.Core.CrudRepository<TContext, TEntity, TKey>.UpdateWhereAsync(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>, Microsoft.EntityFrameworkCore.Query.SetPropertyCalls<TEntity>>>, System.Threading.CancellationToken)
  nameWithType.vb: CrudRepository(Of TContext, TEntity, TKey).UpdateWhereAsync(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))), CancellationToken)
  fullName.vb: EfLight.Core.CrudRepository(Of TContext, TEntity, TKey).UpdateWhereAsync(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity), Microsoft.EntityFrameworkCore.Query.SetPropertyCalls(Of TEntity))), System.Threading.CancellationToken)
  name.vb: UpdateWhereAsync(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of SetPropertyCalls(Of TEntity), SetPropertyCalls(Of TEntity))), CancellationToken)
  spec.csharp:
  - uid: EfLight.Core.CrudRepository`3.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
    name: UpdateWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Core.CrudRepository`3.UpdateWhereAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1},Microsoft.EntityFrameworkCore.Query.SetPropertyCalls{`1}}},System.Threading.CancellationToken)
    name: UpdateWhereAsync
    href: EfLight.Core.CrudRepository-3.html#EfLight_Core_CrudRepository_3_UpdateWhereAsync_System_Linq_Expressions_Expression_System_Func__1_System_Boolean___System_Linq_Expressions_Expression_System_Func_Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1__Microsoft_EntityFrameworkCore_Query_SetPropertyCalls__1____System_Threading_CancellationToken_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1
    name: SetPropertyCalls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.query.setpropertycalls-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Core.LightRepository`1._context
  commentId: F:EfLight.Core.LightRepository`1._context
  href: EfLight.Core.LightRepository-1.html#EfLight_Core_LightRepository_1__context
  name: _context
  nameWithType: LightRepository<TContext>._context
  fullName: EfLight.Core.LightRepository<TContext>._context
  nameWithType.vb: LightRepository(Of TContext)._context
  fullName.vb: EfLight.Core.LightRepository(Of TContext)._context
- uid: EfLight.Extensions.Object.ToOption``1(``0)
  commentId: M:EfLight.Extensions.Object.ToOption``1(``0)
  href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  name: ToOption<T>(T)
  nameWithType: Object.ToOption<T>(T)
  fullName: EfLight.Extensions.Object.ToOption<T>(T)
  nameWithType.vb: Object.ToOption(Of T)(T)
  fullName.vb: EfLight.Extensions.Object.ToOption(Of T)(T)
  name.vb: ToOption(Of T)(T)
  spec.csharp:
  - uid: EfLight.Extensions.Object.ToOption``1(``0)
    name: ToOption
    href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: EfLight.Extensions.Object.ToOption``1(``0)
    name: ToOption
    href: EfLight.Extensions.Object.html#EfLight_Extensions_Object_ToOption__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: EfLight.Extensions.Object
  commentId: T:EfLight.Extensions.Object
  parent: EfLight.Extensions
  href: EfLight.Extensions.Object.html
  name: Object
  nameWithType: Object
  fullName: EfLight.Extensions.Object
- uid: EfLight.Extensions
  commentId: N:EfLight.Extensions
  href: EfLight.html
  name: EfLight.Extensions
  nameWithType: EfLight.Extensions
  fullName: EfLight.Extensions
  spec.csharp:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Extensions
    name: Extensions
    href: EfLight.Extensions.html
  spec.vb:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Extensions
    name: Extensions
    href: EfLight.Extensions.html
- uid: EfLight.Core.PagingAndSortingRepository`3.#ctor*
  commentId: Overload:EfLight.Core.PagingAndSortingRepository`3.#ctor
  href: EfLight.Core.PagingAndSortingRepository-3.html#EfLight_Core_PagingAndSortingRepository_3__ctor__0_
  name: PagingAndSortingRepository
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.PagingAndSortingRepository
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.PagingAndSortingRepository
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).New
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).New
  name.vb: New
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAll*
  commentId: Overload:EfLight.Core.PagingAndSortingRepository`3.FindAll
  href: EfLight.Core.PagingAndSortingRepository-3.html#EfLight_Core_PagingAndSortingRepository_3_FindAll_System_Boolean_
  name: FindAll
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAll
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAll
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(System.Boolean)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(System.Boolean)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  name: FindAll(bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Boolean)
  name.vb: FindAll(Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(System.Boolean)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  name: FindAll(bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Boolean)
  name.vb: FindAll(Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  name: FindAll(PaginationRequest, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(PaginationRequest, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(PaginationRequest, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, Boolean)
  name.vb: FindAll(PaginationRequest, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EfLight.Common.PaginationRequest
  commentId: T:EfLight.Common.PaginationRequest
  parent: EfLight.Common
  href: EfLight.Common.PaginationRequest.html
  name: PaginationRequest
  nameWithType: PaginationRequest
  fullName: EfLight.Common.PaginationRequest
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  name: FindAll(PaginationRequest, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(PaginationRequest, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(PaginationRequest, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, Boolean)
  name.vb: FindAll(PaginationRequest, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EfLight.Common
  commentId: N:EfLight.Common
  href: EfLight.html
  name: EfLight.Common
  nameWithType: EfLight.Common
  fullName: EfLight.Common
  spec.csharp:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Common
    name: Common
    href: EfLight.Common.html
  spec.vb:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Common
    name: Common
    href: EfLight.Common.html
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  name: FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  name: FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll(PaginationRequest, Expression<Func<TEntity, bool>>, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: FindAll(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, TOrderKey>>
  nameWithType: Expression<Func<TEntity, TOrderKey>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>
  nameWithType.vb: Expression(Of Func(Of TEntity, TOrderKey))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey))
  name.vb: Expression(Of Func(Of TEntity, TOrderKey))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
- uid: EfLight.Common.SortDirection
  commentId: T:EfLight.Common.SortDirection
  parent: EfLight.Common
  href: EfLight.Common.SortDirection.html
  name: SortDirection
  nameWithType: SortDirection
  fullName: EfLight.Common.SortDirection
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  name: FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAll<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAll(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean)
  name.vb: FindAll(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAll``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean)
    name: FindAll
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAll__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EfLight.Core.PagingAndSortingRepository`3.FindAllAsync*
  commentId: Overload:EfLight.Core.PagingAndSortingRepository`3.FindAllAsync
  href: EfLight.Core.PagingAndSortingRepository-3.html#EfLight_Core_PagingAndSortingRepository_3_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync
  nameWithType: PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync
  fullName: EfLight.Core.PagingAndSortingRepository<TContext, TEntity, TKey>.FindAllAsync
  nameWithType.vb: PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync
  fullName.vb: EfLight.Core.PagingAndSortingRepository(Of TContext, TEntity, TKey).FindAllAsync
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<TEntity>>
  nameWithType: Task<IEnumerable<TEntity>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TEntity>>
  nameWithType.vb: Task(Of IEnumerable(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: Task(Of IEnumerable(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(PaginationRequest, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(PaginationRequest, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(PaginationRequest, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(PaginationRequest, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(PaginationRequest, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(PaginationRequest, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(PaginationRequest, Expression<Func<TEntity, bool>>, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TEntity},{TOrderKey}}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  parent: EfLight.Abstractions.IPagingAndSortingRepository{{TEntity},{TKey}}
  definition: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository{`1,`2}.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  commentId: M:EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  name: FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  nameWithType: IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(PaginationRequest, Expression<Func<TEntity, bool>>, Expression<Func<TEntity, TOrderKey>>, SortDirection, bool, CancellationToken)
  fullName: EfLight.Abstractions.IPagingAndSortingRepository<TEntity, TKey>.FindAllAsync<TOrderKey>(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, System.Linq.Expressions.Expression<System.Func<TEntity, TOrderKey>>, EfLight.Common.SortDirection, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  fullName.vb: EfLight.Abstractions.IPagingAndSortingRepository(Of TEntity, TKey).FindAllAsync(Of TOrderKey)(EfLight.Common.PaginationRequest, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, TOrderKey)), EfLight.Common.SortDirection, Boolean, System.Threading.CancellationToken)
  name.vb: FindAllAsync(Of TOrderKey)(PaginationRequest, Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, TOrderKey)), SortDirection, Boolean, CancellationToken)
  spec.csharp:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: <
  - name: TOrderKey
  - name: '>'
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: EfLight.Abstractions.IPagingAndSortingRepository`2.FindAllAsync``1(EfLight.Common.PaginationRequest,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},EfLight.Common.SortDirection,System.Boolean,System.Threading.CancellationToken)
    name: FindAllAsync
    href: EfLight.Abstractions.IPagingAndSortingRepository-2.html#EfLight_Abstractions_IPagingAndSortingRepository_2_FindAllAsync__1_EfLight_Common_PaginationRequest_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__0___0___EfLight_Common_SortDirection_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TOrderKey
  - name: )
  - name: (
  - uid: EfLight.Common.PaginationRequest
    name: PaginationRequest
    href: EfLight.Common.PaginationRequest.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TOrderKey
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: EfLight.Common.SortDirection
    name: SortDirection
    href: EfLight.Common.SortDirection.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
