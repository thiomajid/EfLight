### YamlMime:ManagedReference
items:
- uid: EfLight.Extensions.ServicesCollectionExtensions
  commentId: T:EfLight.Extensions.ServicesCollectionExtensions
  id: ServicesCollectionExtensions
  parent: EfLight.Extensions
  children:
  - EfLight.Extensions.ServicesCollectionExtensions.AddEfLight``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EfLight.Extensions.EfLightOptions})
  langs:
  - csharp
  - vb
  name: ServicesCollectionExtensions
  nameWithType: ServicesCollectionExtensions
  fullName: EfLight.Extensions.ServicesCollectionExtensions
  type: Class
  source:
    remote:
      path: EfLight/Extensions/ServicesCollectionExtensions.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: ServicesCollectionExtensions
    path: EfLight/Extensions/ServicesCollectionExtensions.cs
    startLine: 7
  assemblies:
  - EfLight
  namespace: EfLight.Extensions
  syntax:
    content: public static class ServicesCollectionExtensions
    content.vb: Public Module ServicesCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EfLight.Extensions.EfLightOptions})
  commentId: M:EfLight.Extensions.ServicesCollectionExtensions.AddEfLight``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EfLight.Extensions.EfLightOptions})
  id: AddEfLight``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EfLight.Extensions.EfLightOptions})
  isExtensionMethod: true
  parent: EfLight.Extensions.ServicesCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddEfLight<TAssembly>(IServiceCollection, Action<EfLightOptions>?)
  nameWithType: ServicesCollectionExtensions.AddEfLight<TAssembly>(IServiceCollection, Action<EfLightOptions>?)
  fullName: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight<TAssembly>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<EfLight.Extensions.EfLightOptions>?)
  type: Method
  source:
    remote:
      path: EfLight/Extensions/ServicesCollectionExtensions.cs
      branch: main
      repo: https://github.com/thiomajid/EfLight.git
    id: AddEfLight
    path: EfLight/Extensions/ServicesCollectionExtensions.cs
    startLine: 31
  assemblies:
  - EfLight
  namespace: EfLight.Extensions
  summary: >-
    Registers all repositories in <code class="typeparamref">TAssembly</code> using <xref href="Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" data-throw-if-not-resolved="false"></xref> by default

    if they are not decorated with <xref href="EfLight.Attributes.RepositoryLifetimeAttribute" data-throw-if-not-resolved="false"></xref> or <code class="paramref">options</code> is null.

    <br /><strong>Note that using <xref href="Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" data-throw-if-not-resolved="false"></xref> will throw an  <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> when 

    WebApplicationBuilder will try to build the app.</strong>
  example: []
  syntax:
    content: public static IServiceCollection AddEfLight<TAssembly>(this IServiceCollection services, Action<EfLightOptions>? options = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    - id: options
      type: System.Action{EfLight.Extensions.EfLightOptions}
      description: >-
        Setup options to indicate the default lifetime of the repositories if they are not decorated with

        <xref href="EfLight.Attributes.RepositoryLifetimeAttribute" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TAssembly
      description: The assembly where the repositories are located.
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: A reference to this instance after the operation has completed.
    content.vb: Public Shared Function AddEfLight(Of TAssembly)(services As IServiceCollection, options As Action(Of EfLightOptions) = Nothing) As IServiceCollection
  overload: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      If one of the repositories does not implement an interface extending from the generic repositories,

      this exception will be thrown.
  nameWithType.vb: ServicesCollectionExtensions.AddEfLight(Of TAssembly)(IServiceCollection, Action(Of EfLightOptions))
  fullName.vb: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight(Of TAssembly)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of EfLight.Extensions.EfLightOptions))
  name.vb: AddEfLight(Of TAssembly)(IServiceCollection, Action(Of EfLightOptions))
references:
- uid: EfLight.Extensions
  commentId: N:EfLight.Extensions
  href: EfLight.html
  name: EfLight.Extensions
  nameWithType: EfLight.Extensions
  fullName: EfLight.Extensions
  spec.csharp:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Extensions
    name: Extensions
    href: EfLight.Extensions.html
  spec.vb:
  - uid: EfLight
    name: EfLight
    href: EfLight.html
  - name: .
  - uid: EfLight.Extensions
    name: Extensions
    href: EfLight.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped
  commentId: F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicelifetime#microsoft-extensions-dependencyinjection-servicelifetime-scoped
  name: Scoped
  nameWithType: ServiceLifetime.Scoped
  fullName: Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped
- uid: EfLight.Attributes.RepositoryLifetimeAttribute
  commentId: T:EfLight.Attributes.RepositoryLifetimeAttribute
  href: EfLight.Attributes.RepositoryLifetimeAttribute.html
  name: RepositoryLifetimeAttribute
  nameWithType: RepositoryLifetimeAttribute
  fullName: EfLight.Attributes.RepositoryLifetimeAttribute
- uid: Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton
  commentId: F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicelifetime#microsoft-extensions-dependencyinjection-servicelifetime-singleton
  name: Singleton
  nameWithType: ServiceLifetime.Singleton
  fullName: Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight*
  commentId: Overload:EfLight.Extensions.ServicesCollectionExtensions.AddEfLight
  href: EfLight.Extensions.ServicesCollectionExtensions.html#EfLight_Extensions_ServicesCollectionExtensions_AddEfLight__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_EfLight_Extensions_EfLightOptions__
  name: AddEfLight
  nameWithType: ServicesCollectionExtensions.AddEfLight
  fullName: EfLight.Extensions.ServicesCollectionExtensions.AddEfLight
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{EfLight.Extensions.EfLightOptions}
  commentId: T:System.Action{EfLight.Extensions.EfLightOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<EfLightOptions>
  nameWithType: Action<EfLightOptions>
  fullName: System.Action<EfLight.Extensions.EfLightOptions>
  nameWithType.vb: Action(Of EfLightOptions)
  fullName.vb: System.Action(Of EfLight.Extensions.EfLightOptions)
  name.vb: Action(Of EfLightOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: EfLight.Extensions.EfLightOptions
    name: EfLightOptions
    href: EfLight.Extensions.EfLightOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: EfLight.Extensions.EfLightOptions
    name: EfLightOptions
    href: EfLight.Extensions.EfLightOptions.html
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
